[1/14] Linking C static library esp-idf/espressif__led_strip/libespressif__led_strip.a
[2/14] Linking C static library esp-idf/spiffs/libspiffs.a
[3/14] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[4/14] Performing build step for 'bootloader'
[1/1] cd /home/dongkhoa/esp/Project/blink/build/bootloader/esp-idf/esptool_py && /home/dongkhoa/esp/python_env/idf5.0_py3.10_env/bin/python /home/dongkhoa/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/dongkhoa/esp/Project/blink/build/bootloader/bootloader.bin
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[5/12] Building C object esp-idf/input_iot/CMakeFiles/__idf_input_iot.dir/src/input.c.obj
[6/12] Linking C static library esp-idf/input_iot/libinput_iot.a
[7/12] Linking C static library esp-idf/main/libmain.a
[8/12] Generating ld/sections.ld
[9/12] Building C object CMakeFiles/blink.elf.dir/project_elf_src_esp32.c.obj
[10/12] Linking CXX executable blink.elf
[11/12] Generating binary image from built executable
esptool.py v4.5
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/dongkhoa/esp/Project/blink/build/blink.bin
[12/12] cd /home/dongkhoa/esp/Project/blink/build/esp-idf/esptool_py && /home/dongkhoa/esp/python_env/idf5.0_py3.10_env/bin/python /home/dongkhoa/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/dongkhoa/esp/Project/blink/build/partition_table/partition-table.bin /home/dongkhoa/esp/Project/blink/build/blink.bin
blink.bin binary size 0x2d670 bytes. Smallest app partition is 0x100000 bytes. 0xd2990 bytes (82%) free.
